factor(cities, levels = setLevels) -> cities
population %>%
names(sort(.)) %>%
factor(cities, levels=.) -> cities
population %>% names(sort(.))
population %>%
sort() %>%
names() %>%
factor(cities, levels=.) -> cities
dataList <- list(
num=c(2,97,22,15,7),
chr=c("2","97","22","15","7")
)
map(dataList, is.numeric) -> results
unlist(results) -> pick_numeric
dataList[pick_numeric] -> num_element
(num_element[[1]] > 50) -> pick_big
num_element[[1]][pick_big] -> bigNumber
map(dataList, is.numeric) %>%
unlist(.) %>%
dataList[.] %>%
{(.[[1]] > 50)} %>%
num_element[[1]][.] -> bigNumber
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr); library(purrr); library(magrittr)
source("https://www.dropbox.com/s/aow5y2772r8ratb/regexPatternCheck.R?dl=1", encoding = "UTF-8")
jsonlite::fromJSON("https://www.dropbox.com/s/8wgdef4v44k1w0g/tpe_highSchools.json?dl=1") -> tpe_highSchools
tpe_highSchools <- factor(tpe_highSchools)
levels(tpe_highSchools)
factor(tpe_highSchools,levels = c("臺北市立第一女中","台北市立第一女子高級中學","中山女中","中山女高", "台北市立中山女中", "臺北市立中山女子高級中學","國立政大附中", "國立政治大學附屬高級中學")) -> tpe_highSchools
tpe_highSchools
class(tpe_highSchools)
tpe_highSchools[[680]] <- c("北一女"{10}) ->tpe_highSchools
tpe_highSchools[[680]] <- c("北一女","北一女","北一女","北一女","北一女","北一女","北一女","北一女","北一女","北一女") ->tpe_highSchools
levels(tpe_highSchools) <- c(levels(tpe_highSchools),"北一女")
tpe_highSchools[[c(680,681,682,683,684,685,686,687,688,689)]] <- "北一女"
levels(tpe_highSchools) <- c(levels(tpe_highSchools),"北一女")
levels(tpe_highSchools) <- c(levels(tpe_highSchools),"北一女")
source("https://www.dropbox.com/s/aow5y2772r8ratb/regexPatternCheck.R?dl=1", encoding = "UTF-8")
jsonlite::fromJSON("https://www.dropbox.com/s/8wgdef4v44k1w0g/tpe_highSchools.json?dl=1") -> tpe_highSchools
tpe_highSchools <- factor(tpe_highSchools)
source("https://www.dropbox.com/s/aow5y2772r8ratb/regexPatternCheck.R?dl=1", encoding = "UTF-8")
jsonlite::fromJSON("https://www.dropbox.com/s/8wgdef4v44k1w0g/tpe_highSchools.json?dl=1") -> tpe_highSchools
tpe_highSchools <- factor(tpe_highSchools)
source("https://www.dropbox.com/s/aow5y2772r8ratb/regexPatternCheck.R?dl=1", encoding = "UTF-8")
jsonlite::fromJSON("https://www.dropbox.com/s/8wgdef4v44k1w0g/tpe_highSchools.json?dl=1") -> tpe_highSchools
tpe_highSchools <- factor(tpe_highSchools)
factor(tpe_highSchools,levels = c("臺北市立第一女中","台北市立第一女子高級中學","中山女中","中山女高", "台北市立中山女中", "臺北市立中山女子高級中學","國立政大附中", "國立政治大學附屬高級中學")) -> tpe_highSchools
tpe_highSchools
levels(tpe_highSchools) <- c(levels(tpe_highSchools),"北一女")
tpe_highSchools[[680]] <- "北一女"
tpe_highSchools[[681]] <- "北一女"
tpe_highSchools[[682]] <- "北一女"
tpe_highSchools[[683]] <- "北一女"
tpe_highSchools[[684]] <- "北一女"
tpe_highSchools[[685]] <- "北一女"
tpe_highSchools[[686]] <- "北一女"
tpe_highSchools[[687]] <- "北一女"
tpe_highSchools[[688]] <- "北一女"
tpe_highSchools[[689]] <- "北一女"
tpe_highSchools
"(臺|台)?北市?立?第?一女子?高?級?中?學?" -> regex_hs1st
regex_hs1st
check_regexRestriction("臺台北市立第一女子高級中學",regex_hs1st)
currentLevels <- levels(tpe_highSchools)
str_replace(currentLevels,regex_hs1st,"北一女") -> levels(tpe_highSchools)
levels(tpe_highSchools)
"(高級中$學$)$" -> regex_hsTitle
regex_hsTitle
check_regexRestriction("高級中學",regex_hsTitle)
currentLevels <- levels(tpe_highSchools)
str_remove(
currentLevels,regex_hsTitle
) -> levels(tpe_highSchools)
levels(tpe_highSchools)
data228 <- readr::read_csv("https://www.dropbox.com/s/64yf3uq8wtvb5q7/%E4%BA%8C%E4%BA%8C%E5%85%AB%E4%BA%8B%E4%BB%B6%E4%BA%BA%E5%90%8D%E7%B4%A2%E5%BC%95.csv?dl=1")
"(高級中$|學$)?" -> regex_hsTitle
regex_hsTitle
check_regexRestriction("高級中學",regex_hsTitle)
currentLevels <- levels(tpe_highSchools)
str_remove(
currentLevels,regex_hsTitle
) -> levels(tpe_highSchools)
levels(tpe_highSchools)
"(高|級|中$|學$)$" -> regex_hsTitle
regex_hsTitle
check_regexRestriction("高級中學",regex_hsTitle)
currentLevels <- levels(tpe_highSchools)
str_remove(
currentLevels,regex_hsTitle
) -> levels(tpe_highSchools)
levels(tpe_highSchools)
"(高級中$|學$)?" -> regex_hsTitle
regex_hsTitle
check_regexRestriction("高級中學",regex_hsTitle)
currentLevels <- levels(tpe_highSchools)
str_remove(
currentLevels,regex_hsTitle
) -> levels(tpe_highSchools)
levels(tpe_highSchools)
check_regexRestriction("高級中學",regex_hsTitle)
currentLevels <- levels(tpe_highSchools)
str_remove(
currentLevels,regex_hsTitle
) -> levels(tpe_highSchools)
levels(tpe_highSchools)
check_regexRestriction("高級中學",regex_hsTitle)
currentLevels <- levels(tpe_highSchools)
str_remove(
currentLevels,regex_hsTitle
) -> levels(tpe_highSchools)
levels(tpe_highSchools)
check_regexRestriction("高級中學",regex_hsTitle)
currentLevels <- levels(tpe_highSchools)
str_remove(
currentLevels,regex_hsTitle
) -> levels(tpe_highSchools)
levels(tpe_highSchools)
"(高級中$|學$)$" -> regex_hsTitle
regex_hsTitle
check_regexRestriction("高級中學",regex_hsTitle)
currentLevels <- levels(tpe_highSchools)
str_remove(
currentLevels,regex_hsTitle
) -> levels(tpe_highSchools)
levels(tpe_highSchools)
check_regexRestriction("高級中學",regex_hsTitle)
currentLevels <- levels(tpe_highSchools)
str_remove(
currentLevels,regex_hsTitle
) -> levels(tpe_highSchools)
levels(tpe_highSchools)
View(data228)
"(高級(中)$|(學)$)$" -> regex_hsTitle
regex_hsTitle
check_regexRestriction("高級中學",regex_hsTitle)
currentLevels <- levels(tpe_highSchools)
str_remove(
currentLevels,regex_hsTitle
) -> levels(tpe_highSchools)
levels(tpe_highSchools)
source("https://www.dropbox.com/s/aow5y2772r8ratb/regexPatternCheck.R?dl=1", encoding = "UTF-8")
jsonlite::fromJSON("https://www.dropbox.com/s/8wgdef4v44k1w0g/tpe_highSchools.json?dl=1") -> tpe_highSchools
tpe_highSchools <- factor(tpe_highSchools)
factor(tpe_highSchools,levels = c("臺北市立第一女中","台北市立第一女子高級中學","中山女中","中山女高", "台北市立中山女中", "臺北市立中山女子高級中學","國立政大附中", "國立政治大學附屬高級中學")) -> tpe_highSchools
tpe_highSchools
levels(tpe_highSchools) <- c(levels(tpe_highSchools),"北一女")
tpe_highSchools[[680]] <- "北一女"
tpe_highSchools[[681]] <- "北一女"
tpe_highSchools[[682]] <- "北一女"
tpe_highSchools[[683]] <- "北一女"
tpe_highSchools[[684]] <- "北一女"
tpe_highSchools[[685]] <- "北一女"
tpe_highSchools[[686]] <- "北一女"
tpe_highSchools[[687]] <- "北一女"
tpe_highSchools[[688]] <- "北一女"
tpe_highSchools[[689]] <- "北一女"
tpe_highSchools
"(臺|台)?北市?立?第?一女子?高?級?中?學?" -> regex_hs1st
regex_hs1st
check_regexRestriction("臺台北市立第一女子高級中學",regex_hs1st)
currentLevels <- levels(tpe_highSchools)
str_replace(currentLevels,regex_hs1st,"北一女") -> levels(tpe_highSchools)
levels(tpe_highSchools)
"(高級(中)$|(學)$)$" -> regex_hsTitle
regex_hsTitle
check_regexRestriction("高級中學",regex_hsTitle)
currentLevels <- levels(tpe_highSchools)
str_remove(
currentLevels,regex_hsTitle
) -> levels(tpe_highSchools)
levels(tpe_highSchools)
data228 <- readr::read_csv("https://www.dropbox.com/s/64yf3uq8wtvb5q7/%E4%BA%8C%E4%BA%8C%E5%85%AB%E4%BA%8B%E4%BB%B6%E4%BA%BA%E5%90%8D%E7%B4%A2%E5%BC%95.csv?dl=1")
class(data228)
data228[[5]] <- factor("全宗名編號")
data228[[6]] <- as.integer("年")
data228[c("全宗名編號","年")]
data228[[5]] <- "全宗名編號"
data228[[6]] <- "年"
data228[c("全宗名編號","年")]
levels(data228) <- levels(data228,"全宗名編號","年")
levels(data228) <- c(levels(data228,"全宗名編號","年"))
levels(data228) <- c(levels(data228,"全宗名編號","年"))
levels(data228) <- c(levels(data228),"全宗名編號","年")
data228[[5]] <- factor(str_sub(data228$檔號,1,11))
data228[[6]] <- as.integer(str_sub(data228$檔號,15,16))
data228[c("全宗名編號","年")]
levels(data228) <- c(levels(data228),"全宗名編號","年")
levels(data228) <- c(levels(data228),"全宗名編號","年")
levels(data228) <- c(levels(data228),"全宗名編號","年")
data228[["全宗名編號"]] <- factor(str_sub(data228$檔號,1,11))
data228[["年"]] <- as.integer(str_sub(data228$檔號,15,16))
data228[c("全宗名編號","年")]
data228 <- readr::read_csv("https://www.dropbox.com/s/64yf3uq8wtvb5q7/%E4%BA%8C%E4%BA%8C%E5%85%AB%E4%BA%8B%E4%BB%B6%E4%BA%BA%E5%90%8D%E7%B4%A2%E5%BC%95.csv?dl=1")
levels(data228) <- c(levels(data228),"全宗名編號","年")
data228[["全宗名編號"]] <- factor(str_sub(data228$檔號,1,11))
data228[["年"]] <- as.integer(str_sub(data228$檔號,15,16))
data228[c("全宗名編號","年")]
data228$...5
class
class(data228$全宗名編號)
class(data228$年)
data228$附註
# victims
"[高級中學]$" -> regex_hsTitle
regex_hsTitle
check_regexRestriction("高級中學",regex_hsTitle)
currentLevels <- levels(tpe_highSchools)
str_remove(
currentLevels,regex_hsTitle
) -> levels(tpe_highSchools)
levels(tpe_highSchools)
source("https://www.dropbox.com/s/aow5y2772r8ratb/regexPatternCheck.R?dl=1", encoding = "UTF-8")
jsonlite::fromJSON("https://www.dropbox.com/s/8wgdef4v44k1w0g/tpe_highSchools.json?dl=1") -> tpe_highSchools
tpe_highSchools <- factor(tpe_highSchools)
factor(tpe_highSchools,levels = c("臺北市立第一女中","台北市立第一女子高級中學","中山女中","中山女高", "台北市立中山女中", "臺北市立中山女子高級中學","國立政大附中", "國立政治大學附屬高級中學")) -> tpe_highSchools
tpe_highSchools
levels(tpe_highSchools) <- c(levels(tpe_highSchools),"北一女")
tpe_highSchools[[680]] <- "北一女"
tpe_highSchools[[681]] <- "北一女"
tpe_highSchools[[682]] <- "北一女"
tpe_highSchools[[683]] <- "北一女"
tpe_highSchools[[684]] <- "北一女"
tpe_highSchools[[685]] <- "北一女"
tpe_highSchools[[686]] <- "北一女"
tpe_highSchools[[687]] <- "北一女"
tpe_highSchools[[688]] <- "北一女"
tpe_highSchools[[689]] <- "北一女"
tpe_highSchools
"(臺|台)?北市?立?第?一女子?高?級?中?學?" -> regex_hs1st
regex_hs1st
check_regexRestriction("臺台北市立第一女子高級中學",regex_hs1st)
currentLevels <- levels(tpe_highSchools)
str_replace(currentLevels,regex_hs1st,"北一女") -> levels(tpe_highSchools)
levels(tpe_highSchools)
"[高級中學]$" -> regex_hsTitle
regex_hsTitle
check_regexRestriction("高級中學",regex_hsTitle)
currentLevels <- levels(tpe_highSchools)
str_remove(
currentLevels,regex_hsTitle
) -> levels(tpe_highSchools)
levels(tpe_highSchools)
data228 <- readr::read_csv("https://www.dropbox.com/s/64yf3uq8wtvb5q7/%E4%BA%8C%E4%BA%8C%E5%85%AB%E4%BA%8B%E4%BB%B6%E4%BA%BA%E5%90%8D%E7%B4%A2%E5%BC%95.csv?dl=1")
"[高級中學]$" -> regex_hsTitle
regex_hsTitle
"[高級中學]$" -> regex_hsTitle
regex_hsTitle
check_regexRestriction("高級中學",regex_hsTitle)
currentLevels <- levels(tpe_highSchools)
str_remove(
currentLevels,regex_hsTitle
) -> levels(tpe_highSchools)
levels(tpe_highSchools)
check_regexRestriction("高級中學",regex_hsTitle)
currentLevels <- levels(tpe_highSchools)
str_remove(
currentLevels,regex_hsTitle
) -> levels(tpe_highSchools)
levels(tpe_highSchools)
check_regexRestriction("高級中學",regex_hsTitle)
currentLevels <- levels(tpe_highSchools)
str_remove(
currentLevels,regex_hsTitle
) -> levels(tpe_highSchools)
levels(tpe_highSchools)
"[高級中學]${4}" -> regex_hsTitle
regex_hsTitle
check_regexRestriction("高級中學",regex_hsTitle)
currentLevels <- levels(tpe_highSchools)
str_remove(
currentLevels,regex_hsTitle
) -> levels(tpe_highSchools)
levels(tpe_highSchools)
data228$附註 =="表冊名稱:臺灣省二二八事變正法及死亡人犯名冊" ->pick_data
data228$檔號[pick_data]-> pick_data2
data228$個人名稱[pick_data&pick_data2] ->victims
data228$附註 =="表冊名稱:臺灣省二二八事變正法及死亡人犯名冊" ->pick_data
data228$檔號[pick_data]-> pick_data2
data228$個人名稱[pick_data&pick_data2] ->victims
data228$附註 =="表冊名稱:臺灣省二二八事變正法及死亡人犯名冊" ->pick_data
data228$檔號[pick_data]-> pick_data2
data228$個人名稱[pick_data2] ->victims
victims
data228$附註 =="表冊名稱:臺灣省二二八事變正法及死亡人犯名冊" ->pick_data
data228$個人名稱[pick_data] -> victims
victims
data228$附註 =="表冊名稱:臺灣省二二八事變正法及死亡人犯名冊" ->pick_data
data228$個人名稱[pick_data] -> victims
victims
data$個人名稱[data228$檔號[pick_data]] -> victims
data228$附註 =="表冊名稱:臺灣省二二八事變正法及死亡人犯名冊" ->pick_data
data228$個人名稱[pick_data] -> victims
victims
data228 <- readr::read_csv("https://www.dropbox.com/s/64yf3uq8wtvb5q7/%E4%BA%8C%E4%BA%8C%E5%85%AB%E4%BA%8B%E4%BB%B6%E4%BA%BA%E5%90%8D%E7%B4%A2%E5%BC%95.csv?dl=1")
data228 <- readr::read_csv("https://www.dropbox.com/s/64yf3uq8wtvb5q7/%E4%BA%8C%E4%BA%8C%E5%85%AB%E4%BA%8B%E4%BB%B6%E4%BA%BA%E5%90%8D%E7%B4%A2%E5%BC%95.csv?dl=1")
levels(data228) <- c(levels(data228),"全宗名編號","年")
data228[["全宗名編號"]] <- factor(str_sub(data228$檔號,1,11))
data228[["年"]] <- as.integer(str_sub(data228$檔號,15,16))
data228[c("全宗名編號","年")]
data228$附註 =="表冊名稱:臺灣省二二八事變正法及死亡人犯名冊" ->pick_data
data228$個人名稱[pick_data] -> victims
victims
data228$個人名稱 == victims -> pick_data2
data228$檔號[pick_data2] -> pick_data3
levels(pick_data3) ->pick_data4
pick_data4
data228$個人名稱 == victims -> pick_data2
data228$檔號[pick_data2] -> pick_data3
levels(pick_data3) ->pick_data4
# documentCount_eachVictim
data228$個人名稱 == victims -> pick_data2
data228$檔號[pick_data2] -> pick_data3
levels(pick_data3) ->pick_data4
table(pick_data4) -> documentCount_eachVictim
as.integer(documentCount_eachVictim) -> documentCount_eachVictim
sort(documentCount_eachVictim) -> documentCount_eachVictim
documentCount_eachVictim
data228$個人名稱 == victims -> pick_data2
data228$個人名稱 == victims -> pick_data2
pick_data2
data228$個人名稱 == `victims` -> pick_data2
data228$檔號[pick_data2] -> pick_data3
levels(pick_data3) ->pick_data4
table(pick_data4) -> documentCount_eachVictim
as.integer(documentCount_eachVictim) -> documentCount_eachVictim
sort(documentCount_eachVictim) -> documentCount_eachVictim
documentCount_eachVictim
data228$檔號[victims] -> pick_data3
data228$檔號[victims] -> pick_data3
levels(pick_data3) ->pick_data4
table(pick_data4) -> documentCount_eachVictim
as.integer(documentCount_eachVictim) -> documentCount_eachVictim
sort(documentCount_eachVictim) -> documentCount_eachVictim
documentCount_eachVictim
data228$檔號[victims] -> pick_data3
pick_data3
levels(pick_data3) ->pick_data4
pick_data4
data228$檔號[victims]->pick_data2
data228$檔號[victims]->pick_data2
pick_data2
jsonlite::fromJSON("https://www.dropbox.com/s/7myzzdnoor21hye/courseStructure2.json?dl=1") -> courseStructure
source("https://www.dropbox.com/s/pc8qg2phs3ypcr8/midterm108_2.R?dl=1", encoding="UTF-8")
jsonlite::fromJSON("https://www.dropbox.com/s/7myzzdnoor21hye/courseStructure2.json?dl=1") -> courseStructure
source("https://www.dropbox.com/s/pc8qg2phs3ypcr8/midterm108_2.R?dl=1", encoding="UTF-8")
View(courseStructure)
str_count(data228$個人名稱,victims) ->
#documentCount_eachVictim
str_count(data228$個人名稱,victims)
str_count(data228$個人名稱,victims)
courseStructure$學年 == 101 -> year101
courseStructure$應修系級 == "經濟系2" -> eco
courseStructure$科目名稱[year101 & eco] -> eco101junior
econ101junior
courseStructure$學年 == 101 -> year101
courseStructure$應修系級 == "經濟系2" -> eco
courseStructure$科目名稱[year101 & eco] -> econ101junior
econ101junior
class(econ101junior)
year101
eco
levels(econ101junior) -> econ101junior
econ101junior
courseStructure$學年 == 101 -> year101
courseStructure$應修系級 == "經濟系2" -> eco
year101*eco -> `101eco`
as.logical(`101eco`)
courseStructure$科目名稱[`101eco`] -> econ101junior
unique(econ101junior) -> econ101junior
econ101junior
courseStructure$科目名稱[`101eco`] -> econ101junior
econ101junior
101eco
101eco
`101eco`
jsonlite::fromJSON("https://www.dropbox.com/s/7myzzdnoor21hye/courseStructure2.json?dl=1") -> courseStructure
source("https://www.dropbox.com/s/pc8qg2phs3ypcr8/midterm108_2.R?dl=1", encoding="UTF-8")
courseStructure$學年 == 101 -> year101
courseStructure$應修系級 == "經濟系2" -> eco
year101*eco -> `101eco`
as.logical(`101eco`)
courseStructure$科目名稱[`101eco`] -> econ101junior
unique(econ101junior) -> econ101junior
econ101junior
pick_data2[pick_data3]
pick_data2
table(data228$個人名稱) ->pick_data2
pick_data2
names(pick_data2) == victims -> pick_data3
class(pick_data2)
pick_data2[pick_data3]
table(data228$個人名稱) ->pick_data2
names(pick_data2) == victims -> pick_data3
pick_data2[pick_data3]
#documentCount_eachVictim
table(data228$個人名稱) ->pick_data2
names(pick_data2) == victims -> pick_data3
pick_data2[pick_data3] -> documentCount_eachVictim
documentCount_eachVictim
class(victims)
names(pick_data2)
names(pick_data2)[victims] -> pick_data3
pick_data3
names(pick_data2) == c(victims) -> pick_data3
# p=1.2的需求量
p=1.2
qd <- 10-5*p # 小心是5*p, 不能寫5p
# p=1.3的需求量
p=1.3
qd <- 10-5*p
# p=1.4的需求量
p=1.4
qd <- 10-5*p
demand <- # 創造一個物件叫demand
function(p){ # 定義這個物件為函數
q_d <- 10-5*p # 小心是5*p, 不能寫5p
}
# p=1.2的需求量
demand(1.2)
# p=1.3的需求量
demand(1.3)
# p=1.4的需求量
demand(1.4)
demand_return <-
function(p){
q_d <- 10-5*p
return(q_d)
}
# 印在螢幕，但Global Environment並不會有q_d
demand_return(1.2)
.Last.value
# 要長久存在Global Environment要指定物件名稱（不要求與q_d同名）
demand_return(1.2) -> q_d1.2
demand_return(1.2) # 相當於
4
demand_return(1.2) -> q_d1.2 # 相當於
4 -> q_d1.2
q_d <- 5
demand_return(p=1.2)
print(q_d)
dateInput <- today()
library(lubridate)
dateInput <- today()
locationInput <- "新北市"
askSilly_weather <- function(locationInput,dateInput){
jsonlite::fromJSON("https://opendata.cwb.gov.tw/fileapi/v1/opendataapi/F-C0032-001?Authorization=rdec-key-123-45678-011121314&format=JSON") ->
weather_next36hours
(weather_next36hours$cwbopendata$dataset$location$locationName == locationInput) -> pick_location
weather_next36hours$cwbopendata$dataset$location$weatherElement[pick_location][[1]] -> weatherAtLocation
(weatherAtLocation$elementName=="MaxT") ->
pick_MaxT
(weatherAtLocation$elementName=="MinT") ->
pick_MinT
weatherAtLocation$time[pick_MaxT][[1]]$parameter$parameterName[[1]] -> maxT
weatherAtLocation$time[pick_MinT][[1]]$parameter$parameterName[[1]] -> minT
glue::glue("{locationInput} {dateInput} 氣溫，最高{maxT}度，最低{minT}度。")
}
askSilly_weather("臺中市",today())
askSilly_weather("花蓮縣",today())
what_time_it_is("Europe/Paris")
class(demand_return)
# 查詢函數formals arguments要求
formals(askSilly_weather)
# 查詢函數主體
body(askSilly_weather)
learning_topics <-
list(
subject="函數",
date=lubridate::ymd("2020-06-03"),
functionsCreated=list(
demand=demand_return # 等號右邊是呼叫demand_return的定義值，也就是function(...){...}值定義本身。
)
)
learning_topics$functionsCreated$demand(1.2)
typeof(demand_return)
# 查詢函數執行所要求環境
environment(demand_return)
# 若函數執行需要Global environment已存在某些物件，查詢需要哪些物件
codetools::findGlobals(demand_return)
intercept <- 10
slope <- -5
myDemand <- function(p){
q_d <- intercept + slope*p
return(q_d)
}
environment(demand_return)
environment(myDemand)
codetools::findGlobals(demand_return)
codetools::findGlobals(myDemand)
# myDemand對Global environment的要求多了intercept及slope
# 移除global environment裡的intercept及slope
rm(intercept, slope)
demand_return(1.2) # 維持正常運作
myDemand(1.2) # 無法運作
intercept <- 10
slope <- -5
myDemand(1.2)
slope <- -1
myDemand(1.2)
intercept <- 5
slope <- -1.2
myDemand(1.2)
myDemand2 <- function(p, intercept=10, slope=-5){
q_d <- intercept + slope*p
return(q_d)
}
environment(myDemand2)
findGlobals(myDemand2) # 不依靠global env裡的intercept/slope
myDemand2(1.2)
myDemand2(1.2, slope=-1)
myDemand2(1.2, intercept=5, slope=-1.2)
