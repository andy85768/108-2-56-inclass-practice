levels_fiveReceipts <- levels(fiveReceipts)
levels_fiveReceipts
levels_fiveReceipts <- levels(fiveReceipts)
levels_fiveReceipts
storage_fiveReceipts<-as.integer(fiveReceipts)
storage_fiveReceipts
chr_fiveReceipts<- as.character(fiveReceipts)
chr_fiveReceipts
sum_fiveReceipts <- sum(as.interger(fiveReceipts))
sum_fiveReceipts <- sum(as.integer(fiveReceipts))
sum_fiveReceipts
# 啟動一個乾淨空的R環境
source("https://www.dropbox.com/s/xtge2ghfb7dhple/108-2-hw1-4.R?dl=1")
# 除了Global environment會清空，之前引入的套件也會被移除
yy <- 2020
mm <- 'Mar.'
dd <- 15
event_list <- list(
time=lubridate::ymd(paste0(yy,",",mm,dd)),
list(
name="小明",
`是否完成`= T,
"完成所花時間(秒)"=350,
tools=c(
"anchor","axe")
)
)
knitr::opts_chunk$set(echo = F, eval=F)
library(lubridate); library(jsonlite); library(readr)
install.packages(c("lubridate"))
install.packages(c("lubridate"))
taiwan_time = ymd_hms("2019-04-12 12:55:30",tz="Asia/Taipei")
install.packages("lubridate")
taiwan_time = ymd_hms("2019-04-12 12:55:30",tz="Asia/Taipei")
install.packages(c("lubridate"))
install.packages(c("lubridate"))
knitr::opts_chunk$set(echo = TRUE)
.libPaths("R package")
.libPaths("R package")
install.packages(c("lubridate"))
install.packages(c("lubridate"))
.libPaths("lubridate")
.libPaths("lubridate")
.libPaths("lubridate")
install.packages("lubridate")
library(lubridate)
library(lubridate)
install.packages("lubridate")
install.packages(c("lubridate"))
knitr::opts_chunk$set(echo = F, eval=F)
library(lubridate); library(jsonlite); library(readr)
knitr::opts_chunk$set(echo = F, eval=F)
library(lubridate); library(jsonlite); library(readr)
install.packages(c("lubridate"))
install.packages(c("lubridate"))
taiwan_time <- "西元2019年4月12日 12點55分30秒"
oslo_time <- "18.11.2018 15:33:02"
taiwan_time = ymd_hms("2019-04-12 12:55:30",tz="Asia/Taipei")
taiwan_time = ymd_hms("2019-04-12 12:55:30",tz="Asia/Taipei")
knitr::opts_chunk$set(echo = F, eval=F)
library(lubridate); library(jsonlite); library(readr)
install.packages(c("lubridate"))
install.packages(c("lubridate"))
taiwan_time <- "西元2019年4月12日 12點55分30秒"
oslo_time <- "18.11.2018 15:33:02"
taiwan_time = ymd_hms("2019-04-12 12:55:30",tz="Asia/Taipei")
taiwan_time = ymd_hms("2019-04-12 12:55:30",tz="Asia/Taipei")
taiwan_time = ymd_hms("2019-04-12 12:55:30",tz="Asia/Taipei")
taiwan_time = ymd_hms("2019-04-12 12:55:30",tz="Asia/Taipei")
taiwan_time = ymd_hms("2019-04-12 12:55:30",tz="Asia/Taipei")
taiwan_time = ymd_hms("2019-04-12 12:55:30",tz="Asia/Taipei")
taiwan_time = ymd_hms("2019-04-12 12:55:30",tz="Asia/Taipei")
library(lubridate)
taiwan_time = ymd_hms("2019-04-12 12:55:30",tz="Asia/Taipei")
oslo_time = ymd_hms("2018-11-18 15:33:02",tz="Europe/Oslo")
two_times <- c(taiwan_time,oslo_time)
two_times
knitr::opts_chunk$set(echo = F, eval=F)
library(lubridate); library(jsonlite); library(readr)
View(params)
install.packages(c("lubridate"))
install.packages(c("lubridate"))
install.packages(c("backports", "fs", "glue", "Rcpp", "reshape2", "xml2"))
install.packages(c("backports", "fs", "glue", "Rcpp", "reshape2", "xml2"))
install.packages(c("lubridate"))
install.packages(c("lubridate"))
taiwan_time <- "西元2019年4月12日 12點55分30秒"
oslo_time <- "18.11.2018 15:33:02"
taiwan_time = ymd_hms("2019-04-12 12:55:30",tz="Asia/Taipei")
library(lubridate)
taiwan_time = ymd_hms("2019-04-12 12:55:30",tz="Asia/Taipei")
oslo_time = ymd_hms("2018-11-18 15:33:02",tz="Europe/Oslo")
two_times <- c(taiwan_time,oslo_time)
two_times
install.packages(c("lubridate"))
install.packages(c("lubridate"))
taiwan_time <- "西元2019年4月12日 12點55分30秒"
oslo_time <- "18.11.2018 15:33:02"
taiwan_time = ymd_hms("2019-04-12 12:55:30",tz="Asia/Taipei")
taiwan_time = lubridate::ymd_hms("2019-04-12 12:55:30",tz="Asia/Taipei")
oslo_time = ymd_hms("2018-11-18 15:33:02",tz="Europe/Oslo")
library(lubridate)
taiwan_time = ymd_hms("2019-04-12 12:55:30",tz="Asia/Taipei")
oslo_time = ymd_hms("2018-11-18 15:33:02",tz="Europe/Oslo")
two_times <- c(taiwan_time,oslo_time)
two_times
install.packages(c("lubridate"))
install.packages(c("lubridate"))
knitr::opts_chunk$set(echo = F, eval=F)
library(lubridate); library(jsonlite); library(readr)
install.packages(c("lubridate"))
install.packages(c("lubridate"))
taiwan_time <- "西元2019年4月12日 12點55分30秒"
oslo_time <- "18.11.2018 15:33:02"
taiwan_time = ymd_hms("2019-04-12 12:55:30",tz="Asia/Taipei")
install.packages(c("lubridate"))
taiwan_time = ymd_hms("2019-04-12 12:55:30",tz="Asia/Taipei")
install.packages(c("lubridate"))
library(lubridate, lib.loc = "C:/Program Files/R/R-3.6.3/library")
taiwan_time = ymd_hms("2019-04-12 12:55:30",tz="Asia/Taipei")
oslo_time = ymd_hms("2018-11-18 15:33:02",tz="Europe/Oslo")
two_times <- c(taiwan_time,oslo_time)
two_times
library(lubridate)
detach("package:lubridate", unload = TRUE)
taiwan_time = ymd_hms("2019-04-12 12:55:30",tz="Asia/Taipei")
library(lubridate)
taiwan_time = ymd_hms("2019-04-12 12:55:30",tz="Asia/Taipei")
oslo_time = ymd_hms("2018-11-18 15:33:02",tz="Europe/Oslo")
two_times <- c(taiwan_time,oslo_time)
two_times
remove.packages("lubridate", lib="~/R/win-library/3.6")
taiwan_time = ymd_hms("2019-04-12 12:55:30",tz="Asia/Taipei")
oslo_time = ymd_hms("2018-11-18 15:33:02",tz="Europe/Oslo")
two_times <- c(taiwan_time,oslo_time)
two_times
install.packages(c("lubridate"))
install.packages(c("lubridate"))
taiwan_time <- "西元2019年4月12日 12點55分30秒"
oslo_time <- "18.11.2018 15:33:02"
taiwan_time <- "西元2019年4月12日 12點55分30秒"
oslo_time <- "18.11.2018 15:33:02"
library(lubridate)
remove.packages("lubridate", lib="~/R/win-library/3.6")
remove.packages("lubridate", lib="C:/Program Files/R/R-3.6.3/library")
remove.packages("lubridate", lib="C:/Program Files/R/R-3.6.3/library")
detach("package:lubridate", unload = TRUE)
remove.packages("lubridate", lib="C:/Program Files/R/R-3.6.3/library")
library(lubridate, lib.loc = "C:/Program Files/R/R-3.6.3/library")
detach("package:lubridate", unload = TRUE)
remove.packages("lubridate", lib="C:/Program Files/R/R-3.6.3/library")
knitr::opts_chunk$set(echo = F, eval=F)
library(lubridate); library(jsonlite); library(readr)
install.packages(c("lubridate"))
library(lubridate)
taiwan_time <- "西元2019年4月12日 12點55分30秒"
oslo_time <- "18.11.2018 15:33:02"
taiwan_time = ymd_hms("2019-04-12 12:55:30",tz="Asia/Taipei")
oslo_time = ymd_hms("2018-11-18 15:33:02",tz="Europe/Oslo")
two_times <- c(taiwan_time,oslo_time)
two_times
two_times_chicago <- with_tz(two_times,tzone = "America/Chicago")
two_times_chicago
course= list(
approve = T,
course_info = list(
coursename="會計學",
type="必",
credits=3,
time_place=list(list(weekday="星期三",
time_slots=c(7,8,9),
classroom="商2F05") )
)
)
str(course)
course
course= list(
approve = T,
course_info = list(
coursename="會計學",
type="必",
credits=3,
time_place=list(list(weekday="星期三",
time_slots=c(7,8,9),
classroom="商2F05") )
)
)
str(course)
course
knitr::opts_chunk$set(echo = F, eval=F)
library(lubridate); library(jsonlite); library(readr)
taiwan_time <- "西元2019年4月12日 12點55分30秒"
oslo_time <- "18.11.2018 15:33:02"
taiwan_time = ymd_hms("2019-04-12 12:55:30",tz="Asia/Taipei")
oslo_time = ymd_hms("2018-11-18 15:33:02",tz="Europe/Oslo")
two_times <- c(taiwan_time,oslo_time)
two_times
two_times_chicago <- with_tz(two_times,tzone = "America/Chicago")
two_times_chicago
accdients= list(
time = ymd("2014-01-01"),
bureaus = list(
`板橋分局` = list(
type = "駕駛人過失-其他",
casualties = 1),
`海山分局` = list(
type="駕駛人過失-搶越行人穿越道",
casualties= 1))
)
str(accdients)
accdients
source("https://www.dropbox.com/s/bvs0m4oxw7yaqxw/108-2-hw1-3.R?dl=1")
fiveReceipts <- .randomReceipts(n=5)
levels_fiveReceipts <- levels(fiveReceipts)
levels_fiveReceipts
storage_fiveReceipts<-as.integer(fiveReceipts)
storage_fiveReceipts
chr_fiveReceipts<- as.character(fiveReceipts)
chr_fiveReceipts
sum_fiveReceipts <- sum(as.integer(fiveReceipts))
sum_fiveReceipts
# 啟動一個乾淨空的R環境
source("https://www.dropbox.com/s/xtge2ghfb7dhple/108-2-hw1-4.R?dl=1")
# 除了Global environment會清空，之前引入的套件也會被移除
yy <- 2020
mm <- 'Mar.'
dd <- 15
event_list <- list(
time=lubridate::ymd(paste0(yy,",",mm,dd)),
list(
name="小明",
`是否完成`= T,
"完成所花時間(秒)"=350,
tools=c(
"anchor","axe")
)
)
library(lubridate)
install.packages("lubridate")
install.packages("lubridate")
knitr::opts_chunk$set(echo = F, eval=F)
library(lubridate); library(jsonlite); library(readr)
install.packages(c("lubridate"))
install.packages(c("lubridate"))
taiwan_time <- "西元2019年4月12日 12點55分30秒"
oslo_time <- "18.11.2018 15:33:02"
library(lubridate)
taiwan_time = ymd_hms("2019-04-12 12:55:30",tz="Asia/Taipei")
oslo_time = ymd_hms("2018-11-18 15:33:02",tz="Europe/Oslo")
two_times <- c(taiwan_time,oslo_time)
two_times
install.packages("lubridate")
library(lubridate)
taiwan_time = ymd_hms("2019-04-12 12:55:30",tz="Asia/Taipei")
oslo_time = ymd_hms("2018-11-18 15:33:02",tz="Europe/Oslo")
two_times <- c(taiwan_time,oslo_time)
two_times
install.packages(c("backports", "fs", "glue", "Rcpp", "reshape2", "xml2"))
install.packages(c("backports", "fs", "glue", "Rcpp", "reshape2", "xml2"))
install.packages(c("backports", "fs", "glue", "Rcpp", "reshape2", "xml2"))
install.packages(c("backports", "fs", "glue", "Rcpp", "reshape2", "xml2"))
install.packages(c("backports", "fs", "glue", "Rcpp", "reshape2", "xml2"))
install.packages(c("backports", "fs", "glue", "Rcpp", "reshape2", "xml2"))
install.packages(c("backports", "fs", "glue", "Rcpp", "reshape2", "xml2"))
taiwan_time <- "西元2019年4月12日 12點55分30秒"
oslo_time <- "18.11.2018 15:33:02"
install.packages(c("backports", "fs", "glue", "Rcpp", "reshape2", "xml2"))
install.packages(c("backports", "fs", "glue", "Rcpp", "reshape2", "xml2"))
install.packages(c("backports", "fs", "glue", "Rcpp", "reshape2", "xml2"))
knitr::opts_chunk$set(echo = F, eval=F)
library(lubridate); library(jsonlite); library(readr)
install.packages(c("lubridate"))
install.packages(c("lubridate"))
taiwan_time <- "西元2019年4月12日 12點55分30秒"
oslo_time <- "18.11.2018 15:33:02"
taiwan_time = ymd_hms("2019-04-12 12:55:30",tz="Asia/Taipei")
knitr::opts_chunk$set(echo = F, eval=F)
library(lubridate); library(jsonlite); library(readr)
library(lubridate)
taiwan_time = ymd_hms("2019-04-12 12:55:30",tz="Asia/Taipei")
oslo_time = ymd_hms("2018-11-18 15:33:02",tz="Europe/Oslo")
two_times <- c(taiwan_time,oslo_time)
two_times
two_times_chicago <- with_tz(two_times,tzone = "America/Chicago")
two_times_chicago
course= list(
approve = T,
course_info = list(
coursename="會計學",
type="必",
credits=3,
time_place=list(list(weekday="星期三",
time_slots=c(7,8,9),
classroom="商2F05") )
)
)
str(course)
course
courseUpdate= list(
approve = T,
course_info = list(
coursename="會計學",
type="必",
credits=3,
time_place=list(list(weekday=c("星期二"),c("星期三"),
time_slots=c(5),c(7,8),
classroom="商2F05") )
)
)
str(courseUpdate)
courseUpdate
accdients= list(
time = ymd("2014-01-01"),
bureaus = list(
`板橋分局` = list(
type = "駕駛人過失-其他",
casualties = 1),
`海山分局` = list(
type="駕駛人過失-搶越行人穿越道",
casualties= 1))
)
str(accdients)
accdients
source("https://www.dropbox.com/s/bvs0m4oxw7yaqxw/108-2-hw1-3.R?dl=1")
fiveReceipts <- .randomReceipts(n=5)
levels_fiveReceipts <- levels(fiveReceipts)
levels_fiveReceipts
storage_fiveReceipts<-as.integer(fiveReceipts)
storage_fiveReceipts
chr_fiveReceipts<- as.character(fiveReceipts)
chr_fiveReceipts
sum_fiveReceipts <- sum(as.integer(fiveReceipts))
sum_fiveReceipts
# 啟動一個乾淨空的R環境
source("https://www.dropbox.com/s/xtge2ghfb7dhple/108-2-hw1-4.R?dl=1")
# 除了Global environment會清空，之前引入的套件也會被移除
yy <- 2020
mm <- 'Mar.'
dd <- 15
event_list <- list(
time=lubridate::ymd(paste0(yy,",",mm,dd)),
list(
name="小明",
`是否完成`= T,
"完成所花時間(秒)"=350,
tools=c(
"anchor","axe")
)
)
knitr::opts_chunk$set(echo = TRUE)
source("https://www.dropbox.com/s/mk7bxvu6a3lxf79/studentEnvironmentReport.R?dl=1",print.eval = T)
source("https://www.dropbox.com/s/mk7bxvu6a3lxf79/studentEnvironmentReport.R?dl=1",print.eval = T)
knitr::opts_chunk$set(echo = TRUE)
vectorExample <- c("小明","小英","大雄")
# 有多少位置可選：
length(vectorExample)
vectorExample[[1]]
vectorExample[[3]]
listExample <-
list(
student="小明",
`學期`=list(
`108-1`=list(
list(
name="個體經濟學",
teacher="Alice",
grade=85
)
),
`108-2`=list(
list(
name="總體經濟學",
teacher="Mark",
grade=78
)
)
)
)
# 有多少位置可選：
length(listExample)
listExample[[1]]
listExample[[2]]
View(listExample)
knitr::opts_chunk$set(echo = TRUE)
vectorExample <- c("小明","小英","大雄")
# 有多少位置可選：
length(vectorExample)
vectorExample[[1]]
vectorExample[[3]]
listExample <-
list(
student="小明",
`學期`=list(
`108-1`=list(
list(
name="個體經濟學",
teacher="Alice",
grade=85
)
),
`108-2`=list(
list(
name="總體經濟學",
teacher="Mark",
grade=78
)
)
)
)
# 有多少位置可選：
length(listExample)
listExample[[1]]
listExample[[2]]
listExample[[1]]
listExample[[2]]
listExample[[1]]
listExample[[2]]
library(jsonlite)
fromJSON("https://data.tainan.gov.tw/dataset/4cd9345a-04bf-4328-a97d-314ff78b4763/resource/afc025fc-1ef4-447c-b785-a680391d0ca1/download/tnsport2.json", simplifyDataFrame = F) -> tainanSportsMap
library(jsonlite)
fromJSON("https://data.tainan.gov.tw/dataset/4cd9345a-04bf-4328-a97d-314ff78b4763/resource/afc025fc-1ef4-447c-b785-a680391d0ca1/download/tnsport2.json", simplifyDataFrame = F) -> tainanSportsMap
library(jsonlite)
fromJSON("https://data.tainan.gov.tw/dataset/4cd9345a-04bf-4328-a97d-314ff78b4763/resource/afc025fc-1ef4-447c-b785-a680391d0ca1/download/tnsport2.json", simplifyDataFrame = F) -> tainanSportsMap
length(tainanSportsMap)
# 有多少名字可選：
names(listExample)
listExample$student
listExample$`學期` # 特殊命名依然要用反頓點呼叫
listExample$student
listExample$`學期` # 特殊命名依然要用反頓點呼叫
listExample[["student"]]
listExample$student
listExample[["學期"]] # 小心不是反頓點喔。
listExample$`學期`
fromJSON("http://data.ntpc.gov.tw/api/v1/rest/datastore/382000000A-000157-002",
simplifyDataFrame = F) -> newTaipeiCityVaccine
str(newTaipeiCityVaccine)
length(newTaipeiCityVaccine)
names(newTaipeiCityVaccine)
names(newTaipeiCityVaccine)
newTaipeiCityVaccine[["success"]]
newTaipeiCityVaccine$success
str(newTaipeiCityVaccine[["success"]])
str(newTaipeiCityVaccine$success)
str(newTaipeiCityVaccine[[1]])
str(newTaipeiCityVaccine[[2
]])
str(newTaipeiCityVaccine$result , max.level = 1
)
vectorExample
vectorExample[c(1,3)]
vectorExample[c(3,2,1)] # 產生重新排列效果
# 顯示到第一層
str(listExample, max.level=1)
listExample[c(1,2)]
# 顯示到第一層
str(listExample, max.level=1)
listExample[c(1,2)]
# 顯示到第一層
str(listExample, max.level=1)
listExample[c(1,2)]
# 顯示到第一層
str(listExample, max.level=1)
str(listExample[c(1,2)], max.level = 1)
str(listExample[c(2,1)], max.level = 1)
str(tainanSportsMap[c(5,1076,978)],max.level = 2)
fromJSON("https://www.dropbox.com/s/qnm9bnz7vccrvcz/taipeiNightMarkets.json?dl=1", simplifyDataFrame = F) -> taipeiNightMarkets
str(taipeiNightMarkets[c(1,2,3)],max.level = 2)
str(taipeiNightMarkets[c(1,2,3)],max.level = 1)
length(taipeiNightMarkets)
taipeiNightMarkets[[12]]
taipeiNightMarkets[[12]]
#選單個元素
taipeiNightMarkets[[12]]
taipeiNightMarkets[["士林觀光夜市"]]
taipeiNightMarkets$士林觀光夜市
#選多個元素
taipeiNightMarkets[c(14,12)]
taipeiNightMarkets$士林觀光夜市
#選多個元素
taipeiNightMarkets[c(14,12)]
taipeiNightMarkets[c("雙城街夜市","士林觀光夜市")]
taipeiNightMarkets$士林觀光夜市
#選多個元素
taipeiNightMarkets[c(14,12)]
taipeiNightMarkets$士林觀光夜市
#選多個元素
taipeiNightMarkets[c(14,12)]
taipeiNightMarkets[c("雙城街夜市","士林觀光夜市")]
taipeiNightMarkets$士林觀光夜市
#選多個元素
taipeiNightMarkets[c(14,12)]
vectorExample
vectorExample[c(T,T,F)] # 要，要，不要
str(listExample[c(F,T)]) # 不要，要
str(listExample[c(T,T)]) # 要，要
str(listExample)
get1 <- listExample[["學期"]]
get2 <- listExample["學期"]
get1 # 學期拿出來，有3個元素的list
str(get1)
get2 # listExample 只留下 學期元素，是個只有一個元素的list
str(get2)
numVector <- c(2,3,6,-1,4,2,6)
select1 <- numVector[c(1,4)]; select1
select2 <- select1[[1]]; select2
# 相當於
numVector[c(1,4)][[1]]
select1 <- numVector[c(T,T,F,T,F,F,T)]; select1
select2 <- select1[c(1,4)]; select2
# 相當於
numVector[c(T,T,F,T,F,F,T)][c(1,4)]
